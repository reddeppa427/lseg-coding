name: CI/CD for Hello World

on:
  workflow_dispatch:
  push:
    branches:
      - development # For Dev environment
      - release # For QA environment
      - main # For Production environment
      
permissions: write-all

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Build with Maven
        run: |
          mvn -B package --file pom.xml          

      - name: Run tests
        run: mvn test
           
      - run: echo $JAVA_HOME 
      
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: "1.13"

      - name: Snyk test
        run: snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}     
      

      - name: Upload SARIF file to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif      

  scan:
    name: Security and Quality Scan
    runs-on: ubuntu-latest
    needs: build
    steps:      
      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: snyk/actions/setup@master

      - uses: actions/setup-go@v1
        with:
          go-version: "1.13"

      - name: Snyk test
        run: snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}     
      

      - name: Upload SARIF file to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif     
      

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Deploy to Dev Environment
        run: echo "Deploying to Dev environment..."

  deploy-qa:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/release'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Deploy to QA Environment
        run: echo "Deploying to QA environment..."

  deploy-prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Deploy to Production Environment
        run: echo "Deploying to Production environment..."
